buildscript {
    ext {
        springBootVersion = '2.3.1.RELEASE'
    }
    repositories {
        mavenCentral()
        maven {
            url 'https://plugins.gradle.org/m2/'
        }
    }
    dependencies {
        classpath "org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}"
        classpath 'io.franzbecker:gradle-lombok:4.0.0'
    }
}

allprojects {
    group = 'com.shamardin'
    version = '1.0.0'
}

subprojects {
    apply plugin: 'org.springframework.boot'
    apply plugin: 'java'
    apply plugin: 'groovy'
    apply plugin: 'idea'
    apply plugin: 'io.franzbecker.gradle-lombok'
    apply plugin: 'io.spring.dependency-management'

    sourceCompatibility = JavaVersion.VERSION_14
    targetCompatibility = JavaVersion.VERSION_14

    lombok {
        version = '1.18.12'
    }

    ext['groovy.version'] = '2.5.8'

    repositories {
        mavenCentral()
        jcenter()

    }

    dependencyManagement {
        imports {
            mavenBom "org.springframework.boot:spring-boot-dependencies:${springBootVersion}"
        }
        dependencies {
            dependencySet(group: 'org.spockframework', version: '2.0-M1-groovy-2.5') {
                entry 'spock-core'
                entry 'spock-spring'
            }
        }
    }

    dependencies {
        implementation 'org.springframework.boot:spring-boot-starter-rsocket'
        compileOnly 'org.projectlombok:lombok'
        annotationProcessor 'org.projectlombok:lombok'
        testImplementation('org.springframework.boot:spring-boot-starter-test') {
            exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
        }
        testImplementation 'io.projectreactor:reactor-test'
        testCompile 'org.springframework.boot:spring-boot-starter-test'
        testCompile 'org.spockframework:spock-core'
        testCompile 'org.spockframework:spock-spring'
        testRuntime 'org.objenesis:objenesis'
    }
    configurations {
        compileOnly {
            extendsFrom annotationProcessor
        }
    }

    test {
        useJUnitPlatform()
    }
}
